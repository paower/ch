<template>
    <div class="subnvue flex" @click.stop="">
		<div class="mask" @click="hide()"></div>
		<div class="content flex" ref="content">
			<div class="top flex">
				<div class="title">评论</div>
				<div @click="hide()" class="hideBtn flex">
					<text class="iconfont">&#xe628;</text>
				</div>
			</div>
			<scroll-view scroll-y class="srcoll-view">
					<div v-if="conment_type==1">
						<div v-for="(item,index) in dataList" class="card" :key="index">
							<div class="card-left">
								<image class="card-image" :src="item.uid.headimg"></image>
								<div class="card-content">
									<div class="card-top">
										<text class="card-name" @click="replyName(item.uid.nickname,item.uid.userid)">{{item.uid.nickname}}</text>
										<text class="color-grey">{{item.create_time}}</text>
									</div>
									<div class="card-message">
										<text class="margin-right" v-if="item.toid">回复</text>
										<text class="color-bule margin-right" v-if="item.toid" @click="replyName(item.toid.nickname,item.uid.userid)">{{item.toid.nickname}}:</text>
										
										<text class="margin-right card-text" @click="replyName(item.uid.nickname,item.uid.userid)">{{item.content}}</text>
									</div>
									<!-- <div class="card-bottom">
										<text class="color-grey">查看7条回复></text>
									</div> -->
								</div>
								
							</div>
							
							<div class="card-right">
								<text class="iconfont card-icon color-gray">&#xe603;</text>
								<text class="color-gray">{{item.zan}}</text>
								<text class="iconfont card-icon color-gray">&#xe67f;</text>
								<text class="color-gray">{{item.cai}}</text>
							</div>
						</div>
					</div>
					<div v-else>
						<div v-for="(item,index) in aitList" :key="index" class="card">
							<div class="card-left">
								<image class="card-image" :src="item.headimg"></image>
								<div class="card-content">
									<div class="card-top">
										<text class="card-name" @click="aitto(item.nickname,item.userid)" style="margin-top: 20rpx;">{{item.nickname}}</text>
									</div>
								</div>
								
							</div>
						</div>
					</div>
			</scroll-view>
			<div class="bottom flex"  @click="showInput">
				<input v-if="flag" class="input" @click="showInput" disabled v-model="message" :placeholder="placeholder"/>
				
			</div>
			
		</div>
    </div>
</template>

<script>
	var api = require('../../components/js/api.js');
	//#ifdef APP-NVUE
	const animation = weex.requireModule('animation')
	const modal = weex.requireModule('modal');
	//#endif
    export default {
		data() {
			return {
				flag:true,
				canHide:false,
				message:'',
				toid:0,
				placeholder:'来聊聊天吧',
				reply:'',
				dataList:[],
				video_id:'',
				conment_type:1 ,// 1为评论列表 2为@列表
				aitList:[],
				aitoid:[]
			}
		},
		beforeCreate() {
			// #ifdef APP-NVUE
			var domModule = weex.requireModule('dom');
			domModule.addRule('fontFace', {
				'fontFamily': "iconfont",
				'src': "url('../../static/subnvue/iconfont.ttf')"
			});
			// #endif
		},
		created() {
			uni.$on('showComment', this.showComment)  
			
			uni.$on('sendComment', this.sendComment)  
			
			uni.$on('isait',this.isait)
		},
		destroyed() {
			uni.$off('showComment')
			uni.$off('sendComment')
			uni.$off('isait')
		},
        methods: {
			aitto(nickname,userid){
				this.aitoid = this.aitoid.concat(userid);
				this.placeholder = this.placeholder.concat('@'+nickname)
			},
			isait(value){
				if(value.indexOf("@")==0){
					this.conment_type=2;
					api.get({
						url:'Api/VideoApi/ait',
						data:{nickname:value},
						success:res=>{
							if(res.status==1){
								this.aitList = res.result
							}else{
								this.aitList = [];
							}
						}
					})
				}else{
					this.conment_type=1;
				}
			},
			replyName(name,toid){
				
				this.reply = name
				this.placeholder = `回复 ${name} :`
				this.toid = toid
			},
			//发送评论
			sendComment(val){
				api.post({
					url:'Api/CommentApi/SendComment',
					data:{video_id:this.video_id,toid:this.toid,openid:uni.getStorageSync('userinfo').openid,message:val,ait:this.aitoid},
					success:res=>{
						if(res.status==1){
							this.dataList.push({
								uid:res.result.uid,
								create_time:'刚刚',
								content:val,
								zan:0,
								cai:0,
								toid:res.result.toid,
							})
						}
					}
				})
				this.placeholder = '来聊聊天吧';
				this.toid = 0;
				this.message = '',
				this.reply = '',
				this.aitoid=[]
			},
			//显示评论
			showComment(val){
				console.log('no s')
				if(val){
					this.video_id = val;
					api.get({
						url:'Api/CommentApi/GetListByVideoId',
						data:{video_id:val},
						success:res=>{
							if(res.status==1){
								this.dataList = res.result
							}else{
								this.dataList = [];
							}
						}
					})
				}
				
				this.flag = true
				this.canHide = false
				let content = this.$refs.content;
				animation.transition(content, {
					styles: {transform: `translate(0px, 0px)`,},
					duration: 200, //ms
					timingFunction: 'ease-in-out',
					delay: 0 //ms
				},()=>{
					this.canHide = true
				})
			},
            hide() {
				if(!this.canHide) return
				let content = this.$refs.content;
				animation.transition(content, {
					styles: {transform: `translate(0px, 1000rpx)`,},
					duration: 200, //ms
					timingFunction: 'ease-in-out',
					delay: 0 //ms
				},()=>{
					uni.getSubNVueById('comment').hide()
				})
				this.conment_type=1
			},
			showInput(){
				uni.getSubNVueById('input-box').show('none',0,()=>{
					this.flag = false
					this.conment_type=1
					uni.$emit('showInput')
				});
			}
        }
    }
</script>

<style  lang="scss" scoped>
	/* #ifndef APP-PLUS-NVUE */
	@font-face {
		font-family: "iconfont";
		src: url('~@/static/subnvue/iconfont.ttf') format('truetype');
	}
	/* #endif*/
	.iconfont{
		font-family: "iconfont";
		font-family: iconfont;
		font-size: 18px;
	}
	.color-gray{
		color: #515352;
		font-size: 14px;
	}
	.color-grey{
		color: #A8ACAF;
		font-size: 12px;
	}
	.color-bule{
		color: #55ADDF;
		
	}
	.margin-right{
		margin-right: 20rpx;
		font-size: 28upx;
	}
	.nickname{
		padding-left: 12rpx;
	}
	
	.subnvue {
		flex-direction: column;
		flex: 1;
		background-color: transparent;
		position: relative;
	}
	.mask{
		flex-direction: column;
		background-color:#000 ;
		opacity: 0.4;
		flex: 1;
	}
	.content{
		position: absolute;
		background-color: #fff;
		width: 750rpx;
		bottom: 0;
		height: 1000rpx;
		transform: translateY(1000rpx);
		flex-direction: column;
		justify-content: space-between;
		border-top-left-radius:30rpx;
		border-top-right-radius:30rpx; 
	}
	.top{
		padding: 20rpx;
		flex-direction: row;
		justify-content: space-between;
	}
	.title{
		flex: 1;
		align-items: center;
	}
	.hideBtn{
		padding: 10rpx;
		justify-content: center;
		align-items: center;
	}
	
	/* 底部输入框 */
	.bottom{
		box-shadow: 0 -1px 4px 1px rgba(0,0,0,0.1);
		
		align-items: center;
		flex-direction: row;
		justify-content: space-between;
	}
	.input{
		flex-direction: row;
		align-items: center;
		flex: 1;
		height: 140rpx;
		padding: 30rpx;
		background-color: #fff;
	}
	.bottomBtn{
		padding: 5rpx 15rpx;
		border-radius:10rpx;
		margin-left: 30rpx;
	}
	.bottom-text{
		color: #fff;
	}
	
	/* 评论滚动区 */
	.srcoll-view{
		flex: 1;
	}
	.card{
		position: relative;
		flex-direction: row;
		justify-content: space-between;
		padding: 30rpx;
	}
	
	.card-left{
		flex-direction: row;
	}
	
	/* 中 */
	.card-content{
		flex: 1;
		
	}
	.card-image{
		height: 80rpx;
		width: 80rpx;
		border-radius: 50%;
		margin-right: 30rpx;
	}
	.card-top{
		height: 80rpx;
		
		justify-content: space-between;
	}
	.card-message{
		padding: 20rpx 0;
		flex-direction: row;
		width: 600rpx;
		
	}
	.card-name{
		font-size: 30upx;
	}
	.card-text{
		flex: 1;
	}


	/* 右 */
	.card-right{
		position: absolute;
		right:30rpx;
		top:30rpx;
		flex-direction: row;
		
	}
	.card-icon{
		margin-left: 40rpx;
		margin-right: 20rpx;
	}
</style>
